admin:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    enabled: false
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "true"
      nginx.ingress.kubernetes.io/app-root: /
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      nginx.ingress.kubernetes.io/permanent-redirect-code: "301"
    enabled: true
    hostname: a00672bf97cd448f6ab5d91e42b87657.us-east-2.elb.amazonaws.com
    path: /
    tls: quickstart-kong-admin-cert
  tls:
    containerPort: 8444
    enabled: true
    parameters:
    - http2
    servicePort: 443
  type: LoadBalancer
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - dataplane
        topologyKey: kubernetes.io/hostname
      weight: 100
certificates:
  enabled: true
  issuer: quickstart-kong-selfsigned-issuer
  cluster:
    enabled: true
  admin:
    enabled: false
  portal:
    enabled: false
  proxy:
    enabled: false
cluster:
  enabled: true
  labels:
    konghq.com/service: cluster
  tls:
    containerPort: 8005
    enabled: true
    servicePort: 8005
  type: ClusterIP
clustertelemetry:
  enabled: true
  tls:
    containerPort: 8006
    enabled: true
    servicePort: 8006
    type: ClusterIP
deployment:
  kong:
    daemonset: false
    enabled: true
enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  portal:
    enabled: true
  rbac:
    admin_api_auth: basic-auth
    admin_gui_auth_conf_secret: kong-config-secret
    enabled:
    session_conf_secret: kong-config-secret
  smtp:
    enabled: false
  vitals:
    enabled: true

secretVolumes:
  - kong-tls-cert

env:
  admin_gui_ssl_cert: /etc/secrets/kong-tls-cert/tls.crt
  admin_gui_ssl_cert_key: /etc/secrets/kong-tls-cert/tls.key
  admin_ssl_cert: /etc/secrets/kong-tls-cert/tls.crt
  admin_ssl_cert_key: /etc/secrets/kong-tls-cert/tls.key
  portal_gui_ssl_cert: /etc/secrets/kong-tls-cert/tls.crt
  portal_gui_ssl_cert_key: /etc/secrets/kong-tls-cert/tls.key
  portal_api_ssl_cert: /etc/secrets/kong-tls-cert/tls.crt
  portal_api_ssl_cert_key: /etc/secrets/kong-tls-cert/tls.key
  ssl_cert: /etc/secrets/kong-tls-cert/tls.crt
  ssl_cert_key: /etc/secrets/kong-tls-cert/tls.key
  lua_ssl_verify_depth: 2
  admin_access_log: /dev/stdout
  admin_gui_api_url: https://a00672bf97cd448f6ab5d91e42b87657.us-east-2.elb.amazonaws.com
  admin_error_log: /dev/stdout
  admin_gui_access_log: /dev/stdout
  admin_gui_error_log: /dev/stdout
  admin_gui_host: a06dec28e1c3b4035b7eef09968bea89.us-east-2.elb.amazonaws.com
  admin_gui_protocol: https
  admin_gui_url: https://a06dec28e1c3b4035b7eef09968bea89.us-east-2.elb.amazonaws.com/
  cluster_data_plane_purge_delay: 60
  cluster_listen: 0.0.0.0:8005
  cluster_telemetry_listen: 0.0.0.0:8006
  database: postgres
  log_level: debug
  lua_package_path: /opt/?.lua;;
  nginx_worker_processes: "2"
  password:
    valueFrom:
      secretKeyRef:
        key: kong_admin_password
        name: kong-admin-secret
  pg_database: kong
  pg_host:
    valueFrom:
      secretKeyRef:
        key: pg_host
        name: quickstart-postgresql
  pg_ssl: "off"
  pg_ssl_verify: "off"
  pg_user: kong
  # pg_host: kb-db.cluster-cy6ts8drtpxe.us-east-2.rds.amazonaws.com
  # pg_database: postgres
  # pg_user: postgres
  # pg_schema: kong
  pg_password:
    valueFrom:
      secretKeyRef:
        name: quickstart-postgresql
        key: password
  plugins: bundled,openid-connect
  portal: true
  portal_api_access_log: /dev/stdout
  portal_api_error_log: /dev/stdout
  portal_api_url: https://ae37d8b94e4c34dea8edaf262dec3e99.us-east-2.elb.amazonaws.com
  portal_auth: basic-auth
  portal_cors_origins: '*'
  portal_gui_access_log: /dev/stdout
  portal_gui_error_log: /dev/stdout
  portal_gui_host: a618c366a1b5b427e8763d6638022c62.us-east-2.elb.amazonaws.com
  portal_gui_protocol: https
  portal_gui_url: https://a618c366a1b5b427e8763d6638022c62.us-east-2.elb.amazonaws.com/
  portal_session_conf:
    valueFrom:
      secretKeyRef:
        key: portal_session_conf
        name: kong-config-secret
  prefix: /kong_prefix/
  proxy_access_log: /dev/stdout
  proxy_error_log: /dev/stdout
  proxy_stream_access_log: /dev/stdout
  proxy_stream_error_log: /dev/stdout
  smtp_mock: "on"
  status_listen: 0.0.0.0:8100
  trusted_ips: 0.0.0.0/0,::/0
  vitals: true
extraLabels:
  konghq.com/component: quickstart
image:
  repository: kong/kong-gateway
  tag: "3.4"
ingressController:
  enabled: true
  env:
    kong_admin_filter_tag: ingress_controller_default
    kong_admin_tls_skip_verify: true
    kong_admin_token:
      valueFrom:
        secretKeyRef:
          key: kong_admin_password
          name: kong-admin-secret
    kong_admin_url: https://localhost:8444
    kong_workspace: default
    publish_service: kong/quickstart-kong-proxy
  image:
    repository: docker.io/kong/kubernetes-ingress-controller
    tag: "2.10"
  ingressClass: default
  installCRDs: false
manager:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    containerPort: 8002
    enabled: false
    servicePort: 8002
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    ingressClassName: kong
    enabled: true
    hostname: a06dec28e1c3b4035b7eef09968bea89.us-east-2.elb.amazonaws.com
    path: /
    tls: quickstart-kong-admin-cert
  tls:
    containerPort: 8445
    enabled: true
    parameters:
    - http2
    servicePort: 443
  type: LoadBalancer
migrations:
  enabled: true
  postUpgrade: true
  preUpgrade: true
namespace: kong
podAnnotations:
  kuma.io/gateway: enabled
portal:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    containerPort: 8003
    enabled: false
    servicePort: 8003
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "false"
    ingressClassName: kong
    enabled: true
    hostname: a618c366a1b5b427e8763d6638022c62.us-east-2.elb.amazonaws.com
    path: /
    tls: quickstart-kong-portal-cert
  tls:
    containerPort: 8446
    enabled: true
    parameters:
    - http2
    servicePort: 443
  type: LoadBalancer
portalapi:
  annotations:
    konghq.com/protocol: https
  enabled: true
  http:
    enabled: false
  ingress:
    annotations:
      konghq.com/https-redirect-status-code: "301"
      konghq.com/protocols: https
      konghq.com/strip-path: "true"
      nginx.ingress.kubernetes.io/app-root: /
    ingressClassName: kong
    enabled: true
    hostname: ae37d8b94e4c34dea8edaf262dec3e99.us-east-2.elb.amazonaws.com
    path: /
    tls: quickstart-kong-portal-cert
  tls:
    containerPort: 8447
    enabled: true
    parameters:
    - http2
    servicePort: 443
  type: LoadBalancer

postgresql:
  enabled: true
  auth:
    database: kong
    username: kong
    existingSecret: quickstart-postgresql
    secretKeys:
      adminPasswordKey: password
  persistence:
    enabled: false
  primary:
    persistence:
      enabled: false

proxy:
  annotations:
    prometheus.io/port: "9542"
    prometheus.io/scrape: "true"
  enabled: true
  http:
    containerPort: 8000
    enabled: true
    servicePort: 80
  ingress:
    enabled: false
  labels:
    enable-metrics: true
  tls:
    containerPort: 8443
    enabled: true
    servicePort: 443
  type: LoadBalancer
replicaCount: 1
status:
  enabled: true
  http:
    containerPort: 8100
    enabled: true
  tls:
    containerPort: 8543
    enabled: false